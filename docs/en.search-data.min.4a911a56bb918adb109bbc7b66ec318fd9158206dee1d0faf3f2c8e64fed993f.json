[{"id":0,"href":"/computer_networking/introduction/%E8%AE%A1%E7%BD%91%E6%A6%82%E8%BF%B0/","title":"1.1 计网概述","section":"第一章 序章","content":"\r概述\r#\r因特网概念\r#\r节点通过链路（有线，无线）连成一个网络\n不同的网络通过路由器连接起来构成更大的网络，称为互联网(internet)\n而现在世界上的最大互联网叫因特网(Internet)\n接入：因特网服务提高者ISP 因特网组成\r↕\r定义和功能\r#\r这部分比较笼统，不细讲\n分类\r#\r主要需要掌握的分类标准：\n分布范围\r广域网 WAN：国家地区 城域网 MAN：城市 局域网 LAN：漏洞，学校 个人网 PAN：个人，蓝牙，Wifi等等 拓扑结构\r性能指标\r#\r速率 Speed：aka数据传输率、比特率，每秒多少比特，单位bps\n注意这里的K M G等是10进制的，而表示大小的是2进制的 带宽 Baudwidth：最高速率\n木桶效应，实际传输时的速率是 [主机接口速率，交换机接口速率，线路带宽] 中最小的 吞吐量 Throughput：单位实际内通过的实际数据量，无论方向\n时延 Delay：\n产生地方：发送，传播，处理（检查等等），排队 发送：分组长度/信道宽度 传播：信道长度/电磁波传输速率 接收和传播是同时的，因此不计入接收时延 分析方法，一般不是精确计算，抓住主要\r↕\r\u0026lt;img src=\u0026quot;https://cdn.jsdelivr.net/gh/zvictorliu/typoraPics@main/img/image-20230617161250224.png\u0026quot; alt=\u0026quot;image-20230617161250224\u0026quot; style=\u0026quot;zoom:67%;\u0026quot; /\u0026gt;\r时延带宽积：传播时延*信道带宽，反映发送端发的第一个比特到达终点时已经发出去了多少个比特，以比特为单位的链路长度\n往返时延 RTT：双向交互时，发送端发送短分组到收到确认的时间\n信道利用率：某信道有多少时间有数据通过\n网络利用率：所有信道加权平均 "},{"id":1,"href":"/computer_networking/physical_layer/%E9%80%9A%E4%BF%A1%E5%9F%BA%E7%A1%80/","title":"2.1 通信基础知识","section":"第二章 物理层","content":"\r通信基础\r#\r首先需要了解一些基本概念，然后是著名的奈奎斯特定理和香农定理\n进一步讲编码、交换等计数\n一个典型的通信系统模型：\n基本概念\r#\r传输和交换方式\r#\r串行和并行传输，这个不必多说\n同步传输：先告诉对方我要发多少（曼彻斯特编码）\n异步传输：起始位和终止位\n全双工和半双工：也明白\n信道\r#\r信道是逻辑上的概念，代表一条通路\n传输媒体中可以有多条信道\n定理\r#\r奈奎斯特\r#\r香农\r#\r编码与调制\r#\r发送的消息，承载在数据之中，电磁表现为信号\n其中，信号源发出的原始电信号叫做基带信号，可分数字和模拟的\n转为数字信号叫编码，转为模拟信号叫调制\n码元：在时间域上，表示一个离散数值的基本波形\n数字型数据 to 数字信号\r#\r用什么样的数字信号表示0，用什么样的数字信号表示1\n同步问题：多个相同的码元，怎么区分得开；一般需要时钟同步信号\n曼彻斯特编码采用了跳变来表示，确保都存在跳变，把时钟结合在一起；以太网就是曼彻斯特编码，一般也就考这个\n差分Manchester编码：跳变表示时钟，是否发送变化表示0 1\n数字型数据 to 模拟信号\r#\r发送端调制，接收端解调，将01藏在正弦波当中：\n基本调制：\n模拟型数据 to 数字信号\r#\rPCM：采样、量化、编码\n模拟型数据 to 模拟信号\r#\r大概也是调制解调吧\n物理介质\r#\r传输介质不属于物理层！！！\n有导向性（通道）和非导向性（辐射）两种\n双绞线 同轴电缆 光纤 无线电波、微波、红外、激光等等 "},{"id":2,"href":"/computer_networking/data_link_layer/%E7%BB%84%E5%B8%A7/","title":"3.1 帧的封装","section":"第三章 数据链路层","content":"\r组帧\r#\r将数据封装成帧的意义在于，如果出错不必完全重新传所有数据\n组帧就是帧的封装，对上层传下来的信息进行封装，添加包含控制信息的帧头和帧尾\n传给物理层将帧转成比特流发送出去，而作为接收方要从比特流中提取出一个个帧，就需要帧头帧尾的控制信息，知道什么时候开始什么时候结束，这就是帧定界\n透明传输：数据链路层对上层传下来的数据没有任何限制，对于上层来说数据链路层是透明的; 如果数据中有部分和帧定界符意义，就会出现匹配错误，这样就叫对上层有限制了（不能包含和定界符相同的字段）\n为实现透明传输的方法：\n面向字节的物理链路：字符填充 面向比特的物理链路：比特填充 啥叫面向字节、面向比特？\n1 字符计数法\r#\r在帧的头部使用一个计数字段，表面帧内的字符数，从而确定帧的结束\n但是这样风险比较大，一个有错后面都错了\n2 字符填充法\r#\r在首尾添加特定的字符\n同时如果数据中有同样的字符，为了不误判，需要扫描一遍发现有同样特殊字符后就在其前面添加转义字符\n接收时扫到转义字符就知道这个不是数据并且后面也不是特殊字符\n如果有和转义字符一样的，也可以通过首次出现来辨别\n3 零比特填充\r#\r面向比特的协议中使用\n采用比特组合01111110来定界，对于数据中同样的部分：扫描，每出现5个连续的1就添加0\n接收方扫描，每出现5个连续的1就删除后面的0\n4 违规编码\r#\r在物理层编码时采用的不同于用作区分01的其它编码方式\n比如在曼彻斯特编码中：高to低表示1，低to高表示0，那么就可以用高to高表示开始，低to低表示结束\n这样就不需要填充了\n前提是编码方式有冗余\n"},{"id":3,"href":"/computer_networking/network_layer/ip/","title":"4.1 IP地址","section":"第四章 网络层","content":"\rIP地址\r#\r点分十进制表示法\n编址方法发展\r#\r分类编址\r#\r注：1~126是指最高的8位，最高位必须是0，因此表示范围是0~127，但是0和127都有特殊用，所以实际A类的范围是1~126\n只有A B C类地址才可被分配给各接口\n说“一个A类网络”：每个网络号代表一个网络，该网络下是多个主机\n特殊地址：主机号全0表示网络地址，主机号全1表示广播地址，不分配给主机接口\n总结：A类网络0和127，主机全0和全1 这些不能指派\n具体是这些\r↕\r划分子网\r#\r从主机号位数中借出来分给子网号，从而对同一网络下大量的IP地址进行进一步划分几个子网（建小群）\n用子网掩码来表示借用了多少：网络号+子网号为1，主机号（划分之后的）为0，进行与运算就得到了网络地址（主机号全为0）；根据第一段的范围可以知道是哪类网络从而确定网络号位数\n默认子网掩码：没有子网划分（不借位）的情况\n无分类的编址方法\r#\r即CIDR，不再区别ABC和子网划分\n斜线表示法：表示网络前缀的比特数量\n同一网络前缀下连续的IP地址组成一个CIDR地址块，表示同一网络\n路由聚合：必经之路往后归为一个\n​\t共同前缀法，同样的共同前缀是同一个下一跳\n​\t前缀越长的路由更具体，因此在路由表当中进行最长前缀匹配\n分组格式\r#\rIP协议定义IP分组和其数据格式\n一个IP分组的格式为：首部+数据\n首部中的重要字段：版本，长度，，，，\n当IP数据报较长超过链路层的MTU时，将其分为多个小IP数据报，称为片，在目的地被重新组装（具体是通过标识号来确定属于同一个IP数据报下）\n网络地址转换NAT\r#\r将专用网络地址转换为共用地址，专用网只占一个全球IP地址，下面有用于内部管理的IP地址，对互联网隐藏\n这种私有地址只能在本网络下使用，和公网上的不是同一个主机，不同网络间复用\n只有NAT路由器的地址是global的，不同端口映射到局域网内不同私有IP地址，所以外面的人是通过NAT转换到内部的主机的。而为了统一性，在网内也有这么个格式和公有地址一样的来进行区分，只不过搜索范围局限在这里面而不是全球\n具体来说：本地网内一主机发送给网外的服务器，先发到NAT路由器上，NAT路由器修改数据报的源地址为自己的公网地址，并生成新端口号，发送给服务器，对于服务器来说并没有意识到，发回来，经过NAT路由表NAT路由器知道这个应该给谁\n所以就是一个中转站\nARP DHCP ICMP\r#\rMAC地址（链路层）\r#\r广播信道需要地址来区分\nMAC地址是硬件写死的，也叫物理地址\n每个网络适配器有一个全球唯一的MAC地址（因为电磁波就是广播式的）\n但是，仅有MAC地址做标识无法区分不同网络\n地址解析协议ARP\r#\r链路传送时必须要MAC地址，所以需要通过IP地址找到MAC地址\nARP高速缓存表：\n​\t找得到，填入数据报发送\n​\t找不到，广播-响应-建项\n动态主机配置协议DHCP\r#\r应用层，将计算机插入到新的网络，分频IP地址，不需要手工参与\n网际控制报文协议ICMP\r#\r网络层，报告差错和异常情况\nIPv6\r#\r采用更大的地址空间，从32位扩大到128位\nIP组播\r#\r移动IP\r#\r"},{"id":4,"href":"/computer_networking/application_layer/dhcp/","title":"6.1 DHCP","section":"第六章 应用层","content":"\r动态主机配置协议DHCP\r#\r主机访问web服务器需要配置IP地址、子网掩码、默认网关、DNS服务器等信息\n但是手工配置比较麻烦，于是设置了DHCP服务器，自动获取配置信息\n其过程是：\n客户启动DHCP：广播DHCP发现报文，此时由于还未配置IP地址等，数据报中的源IP地址用0.0.0.0，目的地址用255.255.255.255。这些是默认写好的，报文中还有自己的MAC地址和事务ID 所有设备收到数据报：对于DHCP客户端没有相应端口67，丢弃；对于DHCP服务器接收并进行响应 报文中有客户的MAC地址，服务器查找数据库中的配置信息。有则发送DHCP提供报文，没有则发送默认配置信息。目的IP仍然为广播地址 所有设备收到数据报：DHCP服务器有相应端口68因而丢弃，DHCP客户根据事务ID知道是自己请求的，接收 再次广播请求服务器同意（可能有多个DHCP服务器），此时还是0.0.0.0 服务器确认后，才进行配置 同时还有ARP检查IP地址是否已经被占用\n如果有路由器，路由器是不转发广播报文的\n办法是给路由器配置DHCP服务器的IP地址，使之成为中继代理，将广播报文只转发给DHCP服务器\n"},{"id":5,"href":"/computer_networking/transportation_layer/udp/","title":"UDP协议","section":"第五章 传输层","content":"\rUDP协议\r#\r适合一次性传输较少数据，虽然通信不可靠但是应用层还是有可靠性机制的\n面向报文：不对传下来的应用层报文处理（而TCP会拆分），保留边界\n应用层报文不可分割，是UDP数据报处理的最小单位\nUDP适合一次性传输少量数据、对可靠性要求不高的场景\n报文格式\r#\r首部+数据：\n其中校验和可选，不用时全为0，用来检查是否出错\n根据目的端口号找应用进程，找不到就丢弃，由ICMP发送不可达报文给发送端\n校验\r#\r虽说可靠性机制在应用层，但校验还是UDP协议要做的，即宁差勿错\n计算方法有点复杂。。。\n"},{"id":6,"href":"/computer_networking/introduction/","title":"第一章 序章","section":"序","content":"\r第一章 序章\r#\r计网是计算机通过网络互联，能够资源共享和消息传递\n和操作系统一样，计网也分层，一层一层抽象，上层使用底层提供的功能，但是，这并不是硬件驱动那样的，每一层都有软硬件，只是在功能上分层次而已\n内容就是每一层的介绍\n计网主要就是：硬件+软件+协议\n一个主机向另一个主机发包，那需要先包装，然后邮寄，另一方拆包后才得到内容\n计网分层的依据、道理没有找到解释，整本书都是在讲每一层有哪些协议，感受不到一个具体的系统或者流程，就感觉十分分散，也不具体\n自顶向下看信息是怎么发送的，忽略细节，就看个过程：《网络是怎样连接的》\n这门就是太多太杂了，好多细节内容而没有太明显的界限，崩溃啊，恐怕只能听网课\n如何找到、发送 如何封装、解封（层次体系结构） 可靠性问题（网络协议） 网络系统设计，分配IP "},{"id":7,"href":"/computer_networking/introduction/%E4%BD%93%E7%B3%BB%E7%BB%93%E6%9E%84/","title":"1.2 层次化体系结构","section":"第一章 序章","content":"\r计网层次化体系结构\r#\rOSI/ISO 到 TCP/IP 有历史、市场等原因\n学的是综合两种的 原理体系结构\n*分层意义\r#\r分层是把复杂问题分为小的局部问题\n什么样的介质，什么样的接口，什么样的信号（物理层考虑） 如何标识主机，即编址问题；如何从比特流中读出，即封装问题；协调争用总线（数据链路层） 有多个网络时如何标识，即网络和主机共同编址问题；路径选择、转发问题（网络层） 如何标识应用程序，把分组给谁的问题；出错应该如何处理（传输层） 应用程序的协议设计（应用层） 举例说明视频\r专用术语\r#\r*实体\r#\r发送和接收信息的硬件或软件进程\n在收发双方相同层次下就是对等实体\n协议\r#\r控制两个对等实体进行逻辑通信的规则\n这种逻辑通信思想是屏蔽其它层、站在某一层的角度来看的假设\n三要素：\n语法：信息的格式 语义：要做的操作 同步：时序关系（先后，状态转换） 服务\r#\r底层向高层提高服务，上层使用下层服务，不知道具体协议\n接口：即服务访问点，相邻两层实体交互信息的逻辑接口，它们交互的命令叫做服务原语\n每层对等实体之间传输的数据包有专门的名字，统称协议数据单元PDU 层与层之间的数据包称为服务数据单元SDU 总体图\r↕\r几种体系结构\r#\r计网的体系结构是一个分层模型，在功能上的模型，就是体系结构Architecture概念\n每一层有自己的数据传输单位，各有自己的名称：比特、帧、分组、报文段\n分数据部分SDU和控制信息PCI，共同组成协议数据单元PDU（报文）\n网络协议：数据交换的规则，由语法、语义和同步组成；\n语法：指定数据传输的格式 语义：要完成的功能 同步：事件执行的顺序 接口：相邻两层交换信息的连接点\n服务：下层为上层提供的功能调用\nISO/OSI\r#\rISO指的是国际标准化组织，他们提出的一种网络体系结构模型：开放式互连参考模型 (Open System Interconnection Reference Model, OSI)\n共有7层，自底向上是\n物理层：机械电子层面的原始比特流传输 数据链路层：将原始比特流变为逻辑传输线路 网络层：控制子网运行 传输层：两个进程通信？ 会话层：管理通信会话 表示层：数据处理，格式转换、编码解码等等 应用层： TCP/IP\r#\r另一种网络体系结构\n网络接口层 网际层 传输层 应用层 而IP指的是网际层定义的标准分组格式和协议，IPv4, IPv6指的是版本\n两种结构综合起来分为五层：\n物理层 数据链路层 网络层 传输层 应用层 "},{"id":8,"href":"/computer_networking/physical_layer/%E4%BA%A4%E6%8D%A2/","title":"2.2 交换方式","section":"第二章 物理层","content":"\r交换方式\r#\r电路交换\r#\r必须建立专用连接，而且通信期间一直占用的信息交换方式：\n明显效率不高\n报文交换\r#\r存储转发方式：先发到中间设备，中间设备收到后再进行下一步转发\n无论大小\n分组交换\r#\r分组：将较长的数据分成小段，每段加上首部，构成一个个分组，放到这样的网络上传输：\n这里面每个分组并不一定是同样的路径\n细节问题就有：差错、顺序等等\n任意两个节点通信是电路交换的\n对比三种：\n对于分组交换，有面向连接的虚电路和无连接的数据报方式：\n数据报方式\r#\r简单来说就是发送到不同的交换设备上，最后到达顺序和发送顺序可能不一样，而且甚至有些包还送不到\n虚电路方式\r#\r建立一条逻辑上相连的虚电路\n先呼叫，找到目标，然后原路呼叫回去，便建立一条逻辑通路，这样其实就是固定了一条路，同时是非占用的\n释放也是呼叫两次\n"},{"id":9,"href":"/computer_networking/data_link_layer/%E5%B7%AE%E9%94%99%E6%8E%A7%E5%88%B6/","title":"3.2 差错控制","section":"第三章 数据链路层","content":"\r差错控制\r#\r比特差错：即误码，0可能变成1，1可能变成0\n一段时间内出错的比特占比即为误码率(Bit Error Rate, BER)\n通过差错检测码来检查出是否出现差错，并有相应的纠错措施\n检错\r#\r奇偶校验\r#\r奇偶校验是通常，实际只是选一种\n在数据后面添加1位，让整个数据包括校验位在内的1的个数为奇数（奇校验）或者偶数（偶校验）\n这种只能在奇数偶数层面判断，并不能定位，也有范围限制（漏检）\n循环冗余码\r#\r循环冗余码CRC\n规定多项式 构造被除数：在待发送信息后面添加生成多项式阶数个0 构造除数：生成多项式各项系数（只有01）构成的比特串 除法，计算冗余码 补全余数使得位数和阶数相同（在前面补零），叫做帧检验序列FCS 在FCS放在待发送数据之后发送\n接收方对收到数据除法，余数为0则说明没有误码\n纠错\r#\r"},{"id":10,"href":"/computer_networking/network_layer/%E8%B7%AF%E7%94%B1%E7%AE%97%E6%B3%95/","title":"4.2 路由算法","section":"第四章 网络层","content":"\r路由算法\r#\r根据路由表的维护：\n静态路由 手工配置 动态路由 相互连接的路由器彼此交换信息，按照一定算法优化出来 距离-向量算法\r#\r链路状态算法\r#\r层次路由概念\r#\r"},{"id":11,"href":"/computer_networking/application_layer/dns/","title":"6.2 DNS","section":"第六章 应用层","content":"\r域名系统DNS\r#\r访问Web服务器（测试连通性命令：ping），经典的就是浏览器输入网址-得到网页的过程\nDomain Name System, DNS 是一种命名系统，和IP地址对应，便于记忆\n层次域名：一个DNS服务器显然装不下那么多的域名，所以是分层次的\n域名命名规则\r#\r层次树状域名结构：低级在左，顶级在右\n各级域名交由上一级的域名管理机构管理，最高的由ICANN管理\n顶级域名TLD主要有三类：\n国家地区：.cn, .uk, .hk 等等 通用顶级域名：.com 公司，.org 非盈利组织，.gov政府 等等 基础结构域名：只有一个arpa，用于反向域名解析，IP地址反向解析为域名 国家下面的就由国家自己管理，名称相等的等级未必相同\n域名服务器\r#\r服务器进行域名解析，一个服务器的管辖范围称之为区\n根域名服务器：知道所有顶级域名服务器IP地址，因特网上有13“个”（实际是服务器集群），它不直接解析，而是返回所属顶级域名服务器的IP地址 顶级域名服务器：管理在其上注册的所有二级域名 权限域名服务器：管理某个区的域名，主机的域名在这里登记，这里有域名和IP地址的映射关系 本地域名服务器（默认）：本机的报文首先送往本地域名服务器，它起到代理的作用，将报文转发到上面等级结构中\n域名解析过程\r#\r递归查询\r#\r迭代查询\r#\r一般是，主机以递归方式向本地服务器查询（因为之间可能也是有转发的），本地服务器以迭代方式向根服务器查询，服务器给出答案或者找答案的地方\n同时，每个DNS服务器上有高速缓存，方便快速查找\nDNS报文使用UDP服务\n"},{"id":12,"href":"/computer_networking/transportation_layer/tcp/","title":"TCP协议","section":"第五章 传输层","content":"\rTCP协议\r#\r报文格式\r#\r各个字段的含义：\n序号 TCP传输的每个字节都按顺序编号，序号字段存入本报文段数据的第一个自己序号 连接管理\r#\r建立\r#\r三个要求：\n每一方都要知道对方的存在 双方需要协商某些参数 对运输实体资源分配 每条连接以两端的套接字确定，需要三次握手：\n客户机向服务器发送请求报文段\n这个报文段比较特殊，发出去后进入 SYN-SENT状态 服务器收到，同意，发回确认\n进入SYN-RCVD状态 客户机收到后，再向服务器发出确认\n进入ESTABLISHED状态 释放\r#\r四次握手\n可靠传输实现\r#\r首部的确认号是期望对方收到的下一个报文段的序号，检查这个\n累积确认方式，并不是按顺序的\n超时和冗余ACK时会进行重传\n收到比期望的序号大的，发送一个冗余ACK指明，当发送方收到3个冗余ACK后就会重传 流量控制\r#\r基于滑动窗口\n拥塞控制\r#\r"},{"id":13,"href":"/computer_networking/physical_layer/","title":"第二章 物理层","section":"序","content":"\r物理层\r#\r首先需要明确物理层并不是真的物理实体（传输线），它是考虑如何传输比特流的一层\n它为数据链路层屏蔽了不同介质的差异\n物理层任务\r#\r机械上：规定物理连接的接口规格、引线数量等等 电气上：规定电压范围、速率等等 功能上：规定某一电平代表上面含义 过程上：规定工作时序等等 物理层设备\r#\r中继器\r#\r由于信号会逐渐衰减，所以需要中继器进行放大，专业叫再生和还原\n集线器\r#\r就是多口中继器\n数据交换\r#\r交换设备存在的意义就相当于云，不必每两台设备之间都建立一条通路，只需要向交换中心建立通路\n交换设备具有信号集中、分发的功能\n可以通过电路交换，也可以是存储-转发方式，分为报文交换和分组交换\n分组交换又可分为数据报方式和虚电路方式\n"},{"id":14,"href":"/computer_networking/data_link_layer/%E5%8F%AF%E9%9D%A0%E4%BC%A0%E8%BE%93/","title":"3.3 可靠传输机制","section":"第三章 数据链路层","content":"\r可靠传输机制\r#\r数据链路层提供的服务可分两种：\n不可靠传输：仅丢弃有误码的帧，其它什么都不做 有线链路误码率低所以一般是提供的不可靠服务 这里不可靠但是上层还是可以变可靠 可靠传输：要确保发送端发的接收端都能收到，一般需要重传 无线链路易受干扰 开销会比较大 差错也不只比特差错，但就数据链路层来说就考虑可靠传输\n实现可靠传输的机制（不只适用于数据链路层）：\n停止-等待协议 SW\r#\r基于互联网通信\n收到后发送信息告知是否正确收到：\n但是如果DATA丢失了，就一致等不到确认信号\n所以一般会设置一个超时计时器\n如果确认丢失了，那么发送端超时重传，为了区分是同样还是重传，会设置一个编号\n进一步，确认也有编号（应对迟到情况，不够这种情况几乎不可能发生）\n之间需要等待太多时间，信道利用率比较低\n回退N帧协议 GBN\r#\r流水线方式\n给序号的比特数，决定序号范围\n发送端，接收端各设置一个（循环）滑动窗口\n发送端把滑动窗口内序号的分组依次连续发送 ，无需等待发送，窗口长度范围为 \\(1 \\leq W_T \\leq 2^n -1\\)\r（如果超过范围会出现无法分辨重传和新数据的情况）\n接收端窗口长度为1，接收窗口内的分组，因为是1所以就是依次按顺序接收，每接收一个，向前滑动一个位置\n如果只对按序到达的最后一个分组发送确认，这叫累积确认\n一个分组出现误码，丢弃，发送一个带编号的ACK（最后一个正确接收的编号），而后面的和窗口值对不上，也被丢弃，也都发送一个ACK\n发送方收到多个重复确认就知道该重传了，而不必等待超时计时器\n具体发送端窗口的移动应该是根据ACK的编号来移到相应位置的，当窗口内没有已发送时就继续发送\n选择重传协议 SR\r#\r仅重传有真的有差错的，不牵连后面的\n逐一确认\n接收窗口大于1，先接收【失序但是没有误码且序号在窗口内的】\n超范围：无法区分新旧，分组重复\nmd这里面太细节了，文字描述不清楚\n视频\r最好自己演练一下\n"},{"id":15,"href":"/computer_networking/network_layer/%E8%B7%AF%E7%94%B1%E5%8D%8F%E8%AE%AE/","title":"4.3 路由协议","section":"第四章 网络层","content":"\r路由协议\r#\r"},{"id":16,"href":"/computer_networking/application_layer/ftp/","title":"6.3 FTP","section":"第六章 应用层","content":"\r文件传输协议FTP\r#\r屏蔽了计算机的细节\n交互式访问：指明文件的类型与格式，并有权限\n仍是C/S模式：FTP客户可将文件上传至FTP服务器，客户也可从中下载 ，普通的PC也可以作为服务器\n工作原理\r#\r客户向服务 器建立两个并行的TCP连接：\n控制连接：客户用临时端口-服务器21号端口，传送控制命令 数据连接：另一个临时端口-服务器20号端口（主动模式才是），进行文件传送 控制连接在会话期间一直保持打开，而数据连接只有需要文件传输时才建立，传输完就关闭\n服务器上主进程负责接收请求，子进程负责处理单个请求\n控制进程接到请求后创建数据传送进程和数据连接\n两种数据传输模式：\n主动模式：PORT 客户端和服务器连接后，客户端自己开发一个端口，将端口号和PORT命令发送给服务器，服务器于是将20号端口和这个端口建立数据连接 被动模式：PASV 服务器收到PASV命令后，随机开放一个端口并告知客户端，客户端与之建立数据连接 FTP修改文件：先下载下来，修改后再传上去\n网络文件系统NFS：能够远程操控，只复制一个小片段回来修改然后安装上去\n"},{"id":17,"href":"/computer_networking/data_link_layer/","title":"第三章 数据链路层","section":"序","content":"\r数据链路层\r#\r屏蔽其它层，只从数据链路层来看之间的通信，可以看作它们是直接传输的\n链路：两相邻节点的物理线路 数据链路：链路本身+实现通信协议的软硬件（一般是网络适配器，即网卡） 帧：在数据链路层对等实体通信的PDU的特称 数据链路层需要解决三个问题：\n数据封装成帧及帧定界，对网络层是透明传输，对传下来的PDU没有限制 差错检测；检查是否出现误码 可靠传输；是否需要重传等，保证正确收到 数据链路层设备\r#\r局域网交换机\r#\r"},{"id":18,"href":"/computer_networking/data_link_layer/%E4%BB%8B%E8%B4%A8%E8%AE%BF%E9%97%AE%E6%8E%A7%E5%88%B6/","title":"3.4 介质访问控制","section":"第三章 数据链路层","content":"\r介质访问控制\r#\r隔离在同一信道上传输的来自其它结点的信号，即决定广播信道中信道的分配\n信道划分\r#\r其实就是多路复用技术\n频分多路复用\r#\r时分多路复用\r#\r波分多路复用\r#\r码分多路复用\r#\r随机介质访问\r#\rALOHA协议\r#\rCSMA协议\r#\rCSMA/CD协议\r#\rCSMA/CA协议\r#\r轮询\r#\r令牌传递协议\n"},{"id":19,"href":"/computer_networking/application_layer/%E7%94%B5%E5%AD%90%E9%82%AE%E4%BB%B6/","title":"6.4 E-mail","section":"第六章 应用层","content":"\r电子邮件E-mail\r#\r异步通信方式算是一种思维革新吧\n把东西放到信箱里，不需要同时在场\n邮件系统结构\r#\r用户代理UA：用户和电子邮件系统的接口，一般就是电子邮件客户端软件\n邮件服务器：它们之间发送和接收邮件，服务商提供\n协议：用户代理和邮件服务器之间的协议\n过程是这样的：服务器转发缓存队列里的邮件，用户在服务器上有个信箱\n协议包括发送和读取：\nSTMP和POP3\r#\rSTMP\r#\r发送服务器与接收服务器的连接建立：发送服务器周期性扫描缓冲区，发现有邮件就去和接收服务器建立TCP连接（25）\n它们之间是命令-应答的交互方式\n邮件传送：\n先MAIL FROM: \u0026lt;xxx\u0026gt;命令，看是否有OK返回，检查是否准备好接收 发送 RCPT TO: \u0026lt;xxx\u0026gt;命令，看是否有OK返回，检查地址是否正确 发送DATA命令，理论返回354 start mail input; end with \u0026lt;CR\u0026gt;\u0026lt;LF\u0026gt;.\u0026lt;CR\u0026gt;\u0026lt;LF\u0026gt; CR（Carriage Return）表示回车，CR（Carriage Return）表示回车，但这个跟操作系统有关，Windows下一行是CR+LF，而Linux只有LF，所以我们git有时候会有这个东西的替换 然后发送具体内容，回复OK 发出QUIT，回复xxx POP3和IMAP\r#\r邮局协议POP：TCP 110，只能下载（可选是否删除），不能进行管理\n因特网报文存取协议IMAP：TCP 143，功能更强大，可以在主机上操作服务器上的邮箱\n邮件格式和MIME\r#\r邮件的格式是 信封+内容（包括首部和主体）\n首部包括一些关键字：\nFrom: 源（UA帮填） To: 目标 Subject: 可选，用户填写主题 邮件系统自动从首部中提取需要的信息写在信封上\nSMP只能传送ASCII码文本数据，于是有多用途网际邮件扩充MIME: 在SMTP基础上定义非ASCII码的编码规则，将非ASCII码数据转换\n补充：现在的基于WWW的电子邮件，浏览器HTTP协议\n"},{"id":20,"href":"/computer_networking/network_layer/","title":"第四章 网络层","section":"序","content":"\r网络层\r#\r网络互联：两个以上不同的计网系统合并成大网络，通过中继设备（路由器）连接\n使用相同的IP协议，使得异构性隐藏\n网络层将分组从源主机经过 多个网络和多端链路传输到目的主机\n所以它是考虑的异构网际间的问题\n路由选择： 路由表维护 分组转发 转发表（由路由表得来） 采用无连接的数据报方式\n异构网络的接入机制，差错控制，路由选择，寻址方案等都不同\n给因特网上的每一台主机上的每一个接口分配一个标识符，即IP地址\nIPv4已经用完，现在是IPv6\n转发分组的过程\r#\r判断是否在同一网络（网内发送）：比较网络号\n网际交付时，有一个默认网关，首先发送到这个路由器当中\n路由器收到数据报之后：\n检测首部是否出错 查抄路由表匹配的条目发送到下一跳中 匹配目的网络号（地址掩码相与） 网内才可以广播，网外的路由器会屏蔽广播\n"},{"id":21,"href":"/computer_networking/data_link_layer/%E5%B1%80%E5%9F%9F%E7%BD%91%E4%B8%8E%E5%B9%BF%E5%9F%9F%E7%BD%91/","title":"3.5 局域网与广域网","section":"第三章 数据链路层","content":"\r局域网与广域网\r#\rLAN\r#\r以太网\r#\r无线局域网\r#\rVLAN\r#\r广域网\r#\rPPP协议\r#\r用户与ISP连接所用协议\n"},{"id":22,"href":"/computer_networking/application_layer/%E4%B8%87%E7%BB%B4%E7%BD%91/","title":"6.5 WWW","section":"第六章 应用层","content":"\r万维网\r#\r它并不是一种计算机网络（LAN WAN等才是），而是一个是超文本信息文档储藏所，是Web而非net，是一个分布式应用（信息可以放在不同的站点上）\n文档存于WWW服务器\n一切事物使用统一资源定位符URL标识，通过超文本传输协议HTTP传送，用超文本标记语言HTML对文档结构的标记描述网页的结构和内容，CSS描述网页的样式，JavaScript控制网页的行为，浏览器进行渲染\nHTTP\r#\r浏览器和WWW服务器请求、传输的协议\n工作原理\r#\r采用TCP连接，报文是HTTP格式：\n在1.0版本中是非持续连接，每请求一个文件就需要连接一次（连接建立-请求-响应-断开-重新连接-请求-。。。）\n1.1版本改为持续连接，并且流水线，一般考非流水线（连接建立-请求-响应-请求-响应-。。。连接断开）\n报文格式\r#\r例如：\n例如\r↕\r请求报文：\n响应报文中状态行：\nCookie\r#\rHTTP是无状态的，并不记忆客户是否访问过，但如果想记忆需要用到Cookie，服务器给用户分配一个识别码并在后台数据库建项，以后用户访问的报文是带着识别码的，从而在服务器的数据库找到活动记录\n补充\r缓存与代理\r#\r存放web缓存的中间系统即为代理服务器Proxy Server\nweb缓存存放了最近的请求和响应，主机首先向代理服务器请求，代理服务器发现当新请求与暂存的相同就直接返回，而不需要url地址访问因特网\n代理服务器上的文件都有有效期，避免原始服务器和代理服务器上文件不同（比如我github page部署成功后访问网页并没有马上改变\n"},{"id":23,"href":"/computer_networking/transportation_layer/","title":"第五章 传输层","section":"序","content":"\r传输层\r#\r面向通信的最高层，面向用户功能的最底层\n物理层-数据链路层-网络层实现【主机到主机】的连接\n但是通信实体是进程（多种应用都有通信需求），这叫端到端连接\n通过端口区分不同应用：\n根据需求的不同提供了两种不同协议：TCP UDP\n端口号\r#\r在操作系统中是PID区分进程，但是网络中的主机并不是使用相同的操作系统，于是有了在网络中的统一标识规则：端口号\n端口号用16bit表示，分为几种：\n服务器端：\n熟知端口号：\r\\(0 \\sim 2^{10}-1\\)\r，分给最重要的一些应用 比如 FTP(21/20) ，HTTP(80)，DNS(53)，SCP(22) 这些应用协议程序都有固定的端口号 登记端口号：\r\\(2^{10} \\sim 49151\\)\r供给没有熟知端口号的特定进程，需要在IANA登记 客户端：\n短暂端口号：\r\\(49151 \\sim 2^{16}-1\\)\r客户进程运行时才动态选择，是临时的，通信结束被释放，并不专属于某个程序 端口号用以区分主机内的不同进程，它是本地的，而IP地址区分不同主机\n套接字Socket就是IP地址+端口号，表示哪台主机上的哪个进程，如果只有端口号只能是本地主机上的哪个进程\nA向B通信时也是把自己的源端口号一起发过去的，这样B才能发送回A\n复用和分用概念\r#\r发送方复用：指的是使用同样的封装\n接收方分用：同样的封装但是含义不同\n比如最后都是打包成IP数据报，这叫复用，但是运输层的协议可能是TCP也可能是UDP，能进行区分（有协议字段），这叫分用\n应用层常见协议所用的运输层协议和熟知端口号\r协议字段区分是TCP还是UDP，端口号区分是哪个应用\rTCP与UDP对比\r#\rTCP/IP协议族中：\nTCP：面向连接，需要三次握手才能通信 开销比较大 UDP：无连接，随时通信 收到报文后无需返回确认信息 UDP支持单播、多播和广播，而TCP只能单播（一对一）\nUDP不对应用层报文处理，仅加上UDP头部，而TCP则是将其看成字节流\nUDP对应用层来说仍是提供的不可靠传输，而TCP是确保了可靠传输\n"},{"id":24,"href":"/computer_networking/application_layer/","title":"第六章 应用层","section":"序","content":"\r应用层\r#\r解决应用进程的交互来实现特定的网络应用的问题\n这里就是学经典的网络应用及使用的应用协议\n网络应用模型\r#\r网络应用程序通过彼此的通信共同完成某项任务，于是，开发一种新的网络应用程序应该考虑其在各自端系统的组织方式和之间的关系\n客观-服务器方式 C/S\r#\r描述服务和被服务的关系，客户请求，服务器提供服务：\n对等方式 P2P\r#\r没有中心服务器，或者说每个主机同时是客户机和服务器，直接相互通信(任意一对叫Peer)\n比如Bittorrent、电驴这些就是基于P2P的，下载速度快\n服务分散在多个计算机中\n获取服务的同时也提供服务\n"},{"id":25,"href":"/computer_networking/data_link_layer/%E6%B5%81%E9%87%8F%E6%8E%A7%E5%88%B6/","title":"流量控制","section":"第三章 数据链路层","content":""}]